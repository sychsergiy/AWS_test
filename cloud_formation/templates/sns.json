{
  "Parameters": {
    "SourceCodeS3Bucket": {
      "Type": "String",
      "Default": "aws.cloudformation.test",
      "Description": "S3 bucket id which contains source lambda code"
    },
    "SourceCodeS3BucketKey": {
      "Type": "String",
      "Default": "function.zip",
      "Description": "Path to code in S3 bucket"
    }
  },
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "CloudwatchLogs",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:GetLogEvents",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    "arn:aws:logs:*:*:*"
                  ],
                  "Effect": "Allow"
                }
              ]
            }
          },
          {
            "PolicyName": "SNSPublish",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Ref": "EmailsSNSTopic"
                    }
                  ],
                  "Effect": "Allow"
                }
              ]
            }
          }
        ],
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "LambdaHandler": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "lambda.handler",
        "Code": {
          "S3Bucket": {
            "Ref": "SourceCodeS3Bucket"
          },
          "S3Key": {
            "Ref": "SourceCodeS3BucketKey"
          }
        },
        "Description": "triggered by S3 update event",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambda",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 3
      }
    },
    "EmailsSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": "Serhii_Sych@epam.com",
            "Protocol": "email"
          }
        ]
      }
    }
  }
}