{
  "Parameters": {
    "RDSDbName": {
      "Description": "Database name",
      "Default": "awstest",
      "Type": "String"
    },
    "RDSUsername": {
      "Description": "Database root username",
      "Default": "awstest_admin",
      "Type": "String"
    },
    "RDSPassword": {
      "Description": "Database rot password",
      "Default": "DB_ADMIN_$",
      "Type": "String"
    },
    "SourceCodeS3Bucket": {
      "Type": "String",
      "Default": "aws.cloudformation.test",
      "Description": "S3 bucket id which contains source lambda code"
    },
    "SourceCodeS3BucketKey": {
      "Type": "String",
      "Default": "function.zip",
      "Description": "Path to code in S3 bucket"
    }
  },
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "CloudwatchLogs",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:GetLogEvents",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    "arn:aws:logs:*:*:*"
                  ],
                  "Effect": "Allow"
                }
              ]
            }
          },
          {
            "PolicyName": "DynamoDbReadWritePolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": "arn:aws:dynamodb:*:*:*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaHandler": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "lambda.handler",
        "Code": {
          "S3Bucket": {
            "Ref": "SourceCodeS3Bucket"
          },
          "S3Key": {
            "Ref": "SourceCodeS3BucketKey"
          }
        },
        "Description": "triggered by S3 update event",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambda",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 3,
        "Environment": {
          "Variables": {
            "SNS_TOPIC_ARN": "EmailsSNSTopic",
            "DYNAMO_DB_TABLE_NAME": "DynamoDBTable",
            "DB_HOST": {
              "Fn::GetAtt": [
                "RDSInstance",
                "Endpoint.Address"
              ]
            },
            "DB_PORT": {
              "Fn::GetAtt": [
                "RDSInstance",
                "Endpoint.Port"
              ]
            },
            "DB_NAME": {
              "Ref": "RDSDbName"
            },
            "DB_USER": {
              "Ref": "RDSUsername"
            },
            "DB_PASSWORD": {
              "Ref": "RDSPassword"
            }
          }
        }
      }
    },
    "RDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "5",
        "DBInstanceClass": "db.t2.micro",
        "Engine": "postgres",
        "MasterUsername": {
          "Ref": "RDSUsername"
        },
        "MasterUserPassword": {
          "Ref": "RDSPassword"
        },
        "DBName": {
          "Ref": "RDSDbName"
        }
      }
    }
  }
}